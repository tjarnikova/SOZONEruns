
    CNRS - NERC - Met OFFICE - MERCATOR-ocean - INGV - CMCC
                        NEMO team
             Ocean General Circulation Model
                   version 3.6  (2015) 


  mynode : mpi initialisation                                                    
  ~~~~~~                                                                         
     Namelist nammpp                                                             
        mpi send type                      cn_mpi_send = I                       
        size in bytes of exported buffer   nn_buffer   =            0            
        jpni, jpnj and jpnij will be calculated automatically                    
        avoid use of mpi_allgather at the north fold  ln_nnogather =  F          
             Immediate non-blocking send (isend)                                 

AAAAAAAA


 nemo_ctl: Control prints & Benchmark
 ~~~~~~~ 
    Namelist namctl
       run control (for debugging)     ln_ctl     =  F
       level of print                  nn_print   =            0
       Start i indice for SUM control  nn_ictls   =            0
       End i indice for SUM control    nn_ictle   =            0
       Start j indice for SUM control  nn_jctls   =            0
       End j indice for SUM control    nn_jctle   =            0
       number of proc. following i     nn_isplt   =            1
       number of proc. following j     nn_jsplt   =            1
       benchmark parameter (0/1)       nn_bench   =            0
       timing activated    (0/1)       nn_timing  =            0

 namcfg  : configuration initialization through namelist read
 ~~~~~~~ 
    Namelist namcfg
       configuration name              cp_cfg      = orca
       configuration zoom name         cp_cfz      = no zoom
       configuration resolution        jp_cfg      =            2
       1st lateral dimension ( >= jpi ) jpidta     =          182
       2nd    "         "    ( >= jpj ) jpjdta     =          149
       3nd    "         "               jpkdta     =           31
       1st dimension of global domain in i jpiglo  =          182
       2nd    -                  -    in j jpjglo  =          149
       left bottom i index of the zoom (in data domain) jpizoom =            1
       left bottom j index of the zoom (in data domain) jpizoom =            1
       lateral cond. type (between 0 and 6) jperio =            4
       use file attribute if exists as i/p j-start ln_use_jattr =  F

 mpp_init : Message Passing MPI
 ~~~~~~~~

            defines mpp subdomains
            ----------------------
            iresti=           6  irestj=           3
            jpni  =           6  jpnj  =           8

     ****************************************************************
     *              *               *               *               *   
   8 *   32  x 20   *    32  x 20   *    32  x 20   *    32  x 20   *   
     *              *               *               *               *   
     ****************************************************************
     *              *               *               *               *   
   7 *   32  x 20   *    32  x 20   *    32  x 20   *    32  x 20   *   
     *              *               *               *               *   
     ****************************************************************
     *              *               *               *               *   
   6 *   32  x 20   *    32  x 20   *    32  x 20   *    32  x 20   *   
     *              *               *               *               *   
     ****************************************************************
     *              *               *               *               *   
   5 *   32  x 20   *    32  x 20   *    32  x 20   *    32  x 20   *   
     *              *               *               *               *   
     ****************************************************************
     *              *               *               *               *   
   4 *   32  x 20   *    32  x 20   *    32  x 20   *    32  x 20   *   
     *              *               *               *               *   
     ****************************************************************
     *              *               *               *               *   
   3 *   32  x 21   *    32  x 21   *    32  x 21   *    32  x 21   *   
     *              *               *               *               *   
     ****************************************************************
     *              *               *               *               *   
   2 *   32  x 21   *    32  x 21   *    32  x 21   *    32  x 21   *   
     *              *               *               *               *   
     ****************************************************************
     *              *               *               *               *   
   1 *   32  x 21   *    32  x 21   *    32  x 21   *    32  x 21   *   
     *              *               *               *               *   
     ****************************************************************
             1               2               3               4             

     ********************************
     *              *               *   
   8 *   32  x 20   *    32  x 20   *   
     *              *               *   
     ********************************
     *              *               *   
   7 *   32  x 20   *    32  x 20   *   
     *              *               *   
     ********************************
     *              *               *   
   6 *   32  x 20   *    32  x 20   *   
     *              *               *   
     ********************************
     *              *               *   
   5 *   32  x 20   *    32  x 20   *   
     *              *               *   
     ********************************
     *              *               *   
   4 *   32  x 20   *    32  x 20   *   
     *              *               *   
     ********************************
     *              *               *   
   3 *   32  x 21   *    32  x 21   *   
     *              *               *   
     ********************************
     *              *               *   
   2 *   32  x 21   *    32  x 21   *   
     *              *               *   
     ********************************
     *              *               *   
   1 *   32  x 21   *    32  x 21   *   
     *              *               *   
     ********************************
             5               6             

  sum ilcit(i,1) =    182.00000000000000       jpiglo =          182
  sum ilcit(1,j) =    149.00000000000000       jpjglo =          149

  nproc  =            0
  nowe   =            5  noea   =             1
  nono   =            6  noso   =            -6
  nbondi =            0
  nbondj =           -1
  npolj  =            0
  nperio =            0
  nlci   =           32
  nlcj   =           21
  nimpp  =            1
  njmpp  =            1
  nbse   =            0  npse   =           -5
  nbsw   =            0  npsw   =           -1
  nbne   =            1  npne   =            7
  nbnw   =            1  npnw   =           11

 mpp_init_ioipsl :   iloc  =           32          21
 ~~~~~~~~~~~~~~~     iabsf =            1           1
                     ihals =            0           0
                     ihale =            1           1

  phy_cst : initialization of ocean parameters and constants
  ~~~~~~~
        Domain info
           dimension of model
                  Local domain      Global domain       Data domain 
               jpi     :      32   jpiglo  :     182   jpidta  :     182
               jpj     :      21   jpjglo  :     149   jpjdta  :     149
               jpk     :      31   jpk     :      31   jpkdta  :      31
               jpij    :          672
           mpp local domain info (mpp)
              jpni    :            6    jpreci  :            1
              jpnj    :            8    jprecj  :            1
              jpnij   :           48
           lateral domain boundary condition type : jperio  =            4

        Constants

           mathematical constant                 rpi =    3.1415926535897931     

           day                                rday   =    86400.000000000000       s
           sideral year                       rsiyea =    31558149.010110732       s
           sideral day                        rsiday =    86164.099655911836       s
           omega                              omega  =    7.2921150830460618E-005  s^-1

           nb of months per year               raamo =    12.000000000000000       months
           nb of hours per day                 rjjhh =    24.000000000000000       hours
           nb of minutes per hour              rhhmm =    60.000000000000000       mn
           nb of seconds per minute            rmmss =    60.000000000000000       s

           earth radius                         ra   =    6371229.0000000000       m
           gravity                              grav =    9.8066499999999994       m/s^2

           triple point of temperature      rtt      =    273.16000000000003       K
           freezing point of water          rt0      =    273.14999999999998       K
           melting point of snow            rt0_snow =    273.14999999999998       K
           melting point of ice             rt0_ice  =    273.14999999999998       K
           reference density and heat capacity now defined in eosbn2.f90

           thermal conductivity of the snow          =   0.31000000000000000       J/s/m/K
           thermal conductivity of the ice           =    2.0343960000000001       J/s/m/K
           fresh ice specific heat                   =    2067.0000000000000       J/kg/K
           latent heat of fusion of fresh ice / snow =    334000.00000000000       J/kg
           latent heat of subl.  of fresh ice / snow =    2834000.0000000000       J/kg
           volumetric latent heat fusion of snow     =    110220000.00000000       J/m^3
           density of sea ice                        =    917.00000000000000       kg/m^3
           density of snow                           =    330.00000000000000       kg/m^3
           emissivity of snow or ice                 =   0.96999999999999997     
           salinity of ice                           =    6.0000000000000000       psu
           salinity of sea                           =    34.700000000000003       psu
           latent heat of evaporation (water)        =    2500000.0000000000       J/m^3
           correction factor for solar radiation     =   0.90000000000000002     
           von Karman constant                       =   0.40000000000000002     
           Stefan-Boltzmann constant                 =    5.6699999999999998E-008  J/s/m^2/K^4

           conversion: degre ==> radian          rad =    1.7453292519943295E-002

           smallest real computer value       rsmall =    1.1102230246251565E-016

 eos_init : equation of state
 ~~~~~~~~
           Namelist nameos : set eos parameters
              flag for eq. of state and N^2  nn_eos   =           -1
              model uses Conservative Temperature
              Important: model must be initialized with CT and SA fields

           use of TEOS-10 equation of state (cons. temp. and abs. salinity)

           volumic mass of reference           rau0  =    1026.0000000000000       kg/m^3
           1. / rau0                        r1_rau0  =    9.7465886939571145E-004  m^3/kg
           ocean specific heat                 rcp   =    3991.8679571196299       J/Kelvin
           rau0 * rcp                       rau0_rcp =    4095656.5240047402     
           1. / ( rau0 * rcp )           r1_rau0_rcp =    2.4416109948160356E-007

 dom_cfg : set the ocean configuration
 ~~~~~~~ 
    ocean model configuration used :   cp_cfg = orca                                                                                                                                                                                                                                                             jp_cfg =            2
    global domain lateral boundaries
       jperio= 4, cyclic east-west and north fold with T-point pivot

 dom_glo : domain: data / local 
 ~~~~~~~ 
           data input domain    : jpidta =          182  jpjdta =          149  jpkdta =           31
           global or zoom domain: jpiglo =          182  jpjglo =          149  jpk    =           31
           local domain         : jpi    =           32  jpj    =           21  jpk    =           31

           south-west indices    jpizoom =            1  jpjzoom =            1

           conversion local  ==> data i-index domain
             1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19
            20  21  22  23  24  25  26  27  28  29  30  31  32

           conversion data   ==> local  i-index domain
              starting index
             1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19
            20  21  22  23  24  25  26  27  28  29  30  31  32  33  33  33  33  33  33
            33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33
            33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33
            33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33
            33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33
            33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33
            33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33
            33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33  33
            33  33  33  33  33  33  33  33  33  33  33
              ending index
             1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19
            20  21  22  23  24  25  26  27  28  29  30  31  32  32  32  32  32  32  32
            32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32
            32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32
            32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32
            32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32
            32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32
            32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32
            32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32
            32  32  32  32  32  32  32  32  32  32  32

           conversion local  ==> data j-index domain
             1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19
            20  21

           conversion data  ==> local j-index domain
              starting index
             1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19
            20  21  22  22  22  22  22  22  22  22  22  22  22  22  22  22  22  22  22
            22  22  22  22  22  22  22  22  22  22  22  22  22  22  22  22  22  22  22
            22  22  22  22  22  22  22  22  22  22  22  22  22  22  22  22  22  22  22
            22  22  22  22  22  22  22  22  22  22  22  22  22  22  22  22  22  22  22
            22  22  22  22  22  22  22  22  22  22  22  22  22  22  22  22  22  22  22
            22  22  22  22  22  22  22  22  22  22  22  22  22  22  22  22  22  22  22
            22  22  22  22  22  22  22  22  22  22  22  22  22  22  22  22
              ending index
             1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19
            20  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21
            21  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21
            21  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21
            21  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21
            21  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21
            21  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21
            21  21  21  21  21  21  21  21  21  21  21  21  21  21  21  21

           zoom flags : 
              lzoom   =  F  (T = zoom, F = global )
              lzoom_e =  F  (T = forced closed east  boundary)
              lzoom_w =  F  (T = forced closed west  boundary)
              lzoom_s =  F  (T = forced closed South boundary)
              lzoom_n =  F  (T = forced closed North boundary)

 dom_init : domain initialization
 ~~~~~~~~

 dom_nam  : domain initialization through namelist read
 ~~~~~~~ 
    Namelist namrun
       job number                      nn_no      =            0
       experiment name for output      cn_exp     = ORCA2                                                                                                                                                                                                                                                           
       file prefix restart input       cn_ocerst_in= restart                                                                                                                                                                                                                                                         
       restart input directory         cn_ocerst_indir= .                                                                                                                                                                                                                                                               
       file prefix restart output      cn_ocerst_out= restart                                                                                                                                                                                                                                                         
       restart output directory        cn_ocerst_outdir= .                                                                                                                                                                                                                                                               
       restart logical                 ln_rstart  =  T
       start with forward time step    nn_euler   =            1
       control of time step            nn_rstctl  =            2
       number of the first time step   nn_it000   =            1
       number of the last time step    nn_itend   =         5475
       initial calendar date aammjj    nn_date0   =     17500101
       leap year calendar (0/1)        nn_leapy   =            0
       initial state output            nn_istate  =            0
       frequency of restart file       nn_stock   =         5475
       frequency of output file        nn_write   =         5475
       multi file dimgout              ln_dimgnnn =  F
       mask land points                ln_mskland =  F
       additional CF standard metadata ln_cfmeta  =  F
       overwrite an existing file      ln_clobber =  T
       NetCDF chunksize (bytes)        nn_chunksz =            0
    The IOIPSL calendar is "noleap", i.e. no leap year

    Namelist namdom : space & time domain
       flag read/compute bathymetry      nn_bathy     =            1
       Depth (if =0 bathy=jpkm1)         rn_bathy     =    0.0000000000000000     
       min depth of the ocean    (>0) or    rn_hmin   =   -3.0000000000000000     
       min number of ocean level (<0)       
       minimum thickness of partial      rn_e3zps_min =    20.000000000000000       (m)
          step level                     rn_e3zps_rat =   0.10000000000000001     
       create mesh/mask file(s)          nn_msh       =            0
            = 0   no file created           
            = 1   mesh_mask                 
            = 2   mesh and mask             
            = 3   mesh_hgr, msh_zgr and mask
       ocean time step                       rn_rdt    =    5760.0000000000000     
       asselin time filter parameter         rn_atfp   =   0.10000000000000001     
       acceleration of converge              nn_acc    =            0
         nn_acc=1: surface tracer rdt        rn_rdtmin =    28800.000000000000     
                   bottom  tracer rdt        rdtmax    =    28800.000000000000     
                   depth of transition       rn_rdth   =    800.00000000000000     
       suppression of closed seas (=0)       nn_closea =            0
       online coarsening of dynamical fields ln_crs    =  F
       type of horizontal mesh jphgr_msh           =            0
       longitude of first raw and column T-point ppglam0 =    999999.00000000000     
       latitude  of first raw and column T-point ppgphi0 =    999999.00000000000     
       zonal      grid-spacing (degrees) ppe1_deg        =    999999.00000000000     
       meridional grid-spacing (degrees) ppe2_deg        =    999999.00000000000     
       zonal      grid-spacing (degrees) ppe1_m          =    999999.00000000000     
       meridional grid-spacing (degrees) ppe2_m          =    999999.00000000000     
       ORCA r4, r2 and r05 coefficients  ppsur           =   -4762.9614354630003     
                                         ppa0            =    255.58049070440001     
                                         ppa1            =    245.58132232489999     
                                         ppkth           =    21.433361979379999     
                                         ppacr           =    3.0000000000000000     
       Minimum vertical spacing ppdzmin                  =    999999.00000000000     
       Maximum depth pphmax                              =    999999.00000000000     
       Use double tanf function for vertical coordinates ldbletanh =  F
       Double tanh function parameters ppa2              =    999999.00000000000     
                                       ppkth2            =    999999.00000000000     
                                       ppacr2            =    999999.00000000000     

    Namelist namcla
       cross land advection                 nn_cla    =            0

 dom_clo : closed seas 
 ~~~~~~~

 dom_hgr : define the horizontal mesh from ithe following par_oce parameters 
 ~~~~~~~      type of horizontal mesh           jphgr_msh =            0
              position of the first row and     ppglam0  =    999999.00000000000     
              column grid-point (degrees)       ppgphi0  =    999999.00000000000     
              zonal      grid-spacing (degrees) ppe1_deg =    999999.00000000000     
              meridional grid-spacing (degrees) ppe2_deg =    999999.00000000000     
              zonal      grid-spacing (meters)  ppe1_m   =    999999.00000000000     
              meridional grid-spacing (meters)  ppe2_m   =    999999.00000000000     

           curvilinear coordinate on the sphere read in "coordinate" file

 hgr_read : read the horizontal coordinates
 ~~~~~~~~      jpiglo =          182  jpjglo =          149  jpk =           31
                     iom_nf90_open ~~~ open existing file: coordinates.nc in READ mode
                    ---> coordinates.nc OK

 ===>>> : W A R N I N G
         ===============

           iom_get_123d, file: coordinates.nc, var: glamt
 2D array but 3 spatial dimensions for the data...
 As the size of the z dimension is 1 and as we try to read the first record, 
 we accept this case, even if there is a possible mix-up between z and time dimension
           read glamt (rec:      1) in coordinates.nc ok

 ===>>> : W A R N I N G
         ===============

           iom_get_123d, file: coordinates.nc, var: glamu
 2D array but 3 spatial dimensions for the data...
 As the size of the z dimension is 1 and as we try to read the first record, 
 we accept this case, even if there is a possible mix-up between z and time dimension
           read glamu (rec:      1) in coordinates.nc ok

 ===>>> : W A R N I N G
         ===============

           iom_get_123d, file: coordinates.nc, var: glamv
 2D array but 3 spatial dimensions for the data...
 As the size of the z dimension is 1 and as we try to read the first record, 
 we accept this case, even if there is a possible mix-up between z and time dimension
           read glamv (rec:      1) in coordinates.nc ok

 ===>>> : W A R N I N G
         ===============

           iom_get_123d, file: coordinates.nc, var: glamf
 2D array but 3 spatial dimensions for the data...
 As the size of the z dimension is 1 and as we try to read the first record, 
 we accept this case, even if there is a possible mix-up between z and time dimension
           read glamf (rec:      1) in coordinates.nc ok

 ===>>> : W A R N I N G
         ===============

           iom_get_123d, file: coordinates.nc, var: gphit
 2D array but 3 spatial dimensions for the data...
 As the size of the z dimension is 1 and as we try to read the first record, 
 we accept this case, even if there is a possible mix-up between z and time dimension
           read gphit (rec:      1) in coordinates.nc ok

 ===>>> : W A R N I N G
         ===============

           iom_get_123d, file: coordinates.nc, var: gphiu
 2D array but 3 spatial dimensions for the data...
 As the size of the z dimension is 1 and as we try to read the first record, 
 we accept this case, even if there is a possible mix-up between z and time dimension
           read gphiu (rec:      1) in coordinates.nc ok

 ===>>> : W A R N I N G
         ===============

           iom_get_123d, file: coordinates.nc, var: gphiv
 2D array but 3 spatial dimensions for the data...
 As the size of the z dimension is 1 and as we try to read the first record, 
 we accept this case, even if there is a possible mix-up between z and time dimension
           read gphiv (rec:      1) in coordinates.nc ok

 ===>>> : W A R N I N G
         ===============

           iom_get_123d, file: coordinates.nc, var: gphif
 2D array but 3 spatial dimensions for the data...
 As the size of the z dimension is 1 and as we try to read the first record, 
 we accept this case, even if there is a possible mix-up between z and time dimension
           read gphif (rec:      1) in coordinates.nc ok

 ===>>> : W A R N I N G
         ===============

           iom_get_123d, file: coordinates.nc, var: e1t
 2D array but 3 spatial dimensions for the data...
 As the size of the z dimension is 1 and as we try to read the first record, 
 we accept this case, even if there is a possible mix-up between z and time dimension
           read e1t (rec:      1) in coordinates.nc ok

 ===>>> : W A R N I N G
         ===============

           iom_get_123d, file: coordinates.nc, var: e1u
 2D array but 3 spatial dimensions for the data...
 As the size of the z dimension is 1 and as we try to read the first record, 
 we accept this case, even if there is a possible mix-up between z and time dimension
           read e1u (rec:      1) in coordinates.nc ok

 ===>>> : W A R N I N G
         ===============

           iom_get_123d, file: coordinates.nc, var: e1v
 2D array but 3 spatial dimensions for the data...
 As the size of the z dimension is 1 and as we try to read the first record, 
 we accept this case, even if there is a possible mix-up between z and time dimension
           read e1v (rec:      1) in coordinates.nc ok

 ===>>> : W A R N I N G
         ===============

           iom_get_123d, file: coordinates.nc, var: e1f
 2D array but 3 spatial dimensions for the data...
 As the size of the z dimension is 1 and as we try to read the first record, 
 we accept this case, even if there is a possible mix-up between z and time dimension
           read e1f (rec:      1) in coordinates.nc ok

 ===>>> : W A R N I N G
         ===============

           iom_get_123d, file: coordinates.nc, var: e2t
 2D array but 3 spatial dimensions for the data...
 As the size of the z dimension is 1 and as we try to read the first record, 
 we accept this case, even if there is a possible mix-up between z and time dimension
           read e2t (rec:      1) in coordinates.nc ok

 ===>>> : W A R N I N G
         ===============

           iom_get_123d, file: coordinates.nc, var: e2u
 2D array but 3 spatial dimensions for the data...
 As the size of the z dimension is 1 and as we try to read the first record, 
 we accept this case, even if there is a possible mix-up between z and time dimension
           read e2u (rec:      1) in coordinates.nc ok

 ===>>> : W A R N I N G
         ===============

           iom_get_123d, file: coordinates.nc, var: e2v
 2D array but 3 spatial dimensions for the data...
 As the size of the z dimension is 1 and as we try to read the first record, 
 we accept this case, even if there is a possible mix-up between z and time dimension
           read e2v (rec:      1) in coordinates.nc ok

 ===>>> : W A R N I N G
         ===============

           iom_get_123d, file: coordinates.nc, var: e2f
 2D array but 3 spatial dimensions for the data...
 As the size of the z dimension is 1 and as we try to read the first record, 
 we accept this case, even if there is a possible mix-up between z and time dimension
           read e2f (rec:      1) in coordinates.nc ok
                     iom_close ~~~ close file: coordinates.nc ok

              orca_r2: Gibraltar    : e2u reduced to 20 km

              orca_r2: Bab el Mandeb: e2u reduced to 30 km
                                      e1v reduced to 18 km

              orca_r2: Danish Straits : e2u reduced to 10 km

 dom_zgr : vertical coordinate
 ~~~~~~~
           Namelist namzgr : set vertical coordinate
              z-coordinate - full steps      ln_zco    =  F
              z-coordinate - partial steps   ln_zps    =  T
              s- or hybrid z-s-coordinate    ln_sco    =  F
              ice shelf cavities             ln_isfcav =  F

     zgr_z   : Reference vertical z-coordinates
     ~~~~~~~
            Value of coefficients for vertical mesh:
                  zsur =   -4762.9614354630003     
                  za0  =    255.58049070440001     
                  za1  =    245.58132232489999     
                  zkth =    21.433361979379999     
                  zacr =    3.0000000000000000     

               Reference z-coordinate depth and scale factors:
          level  gdept_1d  gdepw_1d  e3t_1d   e3w_1d  
             1     5.00     0.00    10.00    10.00
             2    15.00    10.00    10.00    10.00
             3    25.00    20.00    10.00    10.00
             4    35.01    30.00    10.01    10.00
             5    45.01    40.01    10.01    10.01
             6    55.03    50.02    10.02    10.02
             7    65.06    60.04    10.04    10.03
             8    75.13    70.09    10.09    10.06
             9    85.25    80.18    10.17    10.12
            10    95.49    90.35    10.33    10.24
            11   105.97   100.69    10.65    10.47
            12   116.90   111.36    11.27    10.91
            13   128.70   122.65    12.47    11.77
            14   142.20   135.16    14.78    13.43
            15   158.96   150.03    19.23    16.65
            16   181.96   169.42    27.66    22.78
            17   216.65   197.37    43.26    34.30
            18   272.48   241.13    70.88    55.21
            19   364.30   312.74   116.11    90.99
            20   511.53   429.72   181.55   146.43
            21   732.20   611.89   261.03   220.35
            22  1033.22   872.87   339.39   301.42
            23  1405.70  1211.59   402.26   373.31
            24  1830.89  1612.98   444.87   426.00
            25  2289.77  2057.13   470.55   459.47
            26  2768.24  2527.22   484.95   478.83
            27  3257.48  3011.90   492.70   489.44
            28  3752.44  3504.46   496.78   495.07
            29  4250.40  4001.16   498.90   498.02
            30  4749.91  4500.02   500.00   499.54
            31  5250.23  5000.00   500.56   500.33

     zgr_bat : defines level and meter bathymetry
     ~~~~~~~
 DW: 1  F T F orca                                                                                                                                                                                                                                                                       2 F F
                     iom_nf90_open ~~~ open existing file: bathy_meter.nc in READ mode
                    ---> bathy_meter.nc OK

 ===>>> : W A R N I N G
         ===============

           iom_get_123d, file: bathy_meter.nc, var: Bathymetry
 2D array but 3 spatial dimensions for the data...
 As the size of the z dimension is 1 and as we try to read the first record, 
 we accept this case, even if there is a possible mix-up between z and time dimension
           read Bathymetry (rec:      1) in bathy_meter.nc ok
 DW: point           32          21   0.0000000000000000        0.0000000000000000     
                     iom_close ~~~ close file: bathy_meter.nc ok
 DW: 1a  F

       orca_r2: Gibraltar strait open at i=         140  j=         102

              orca_r2: Bab el Mandeb strait open at i=         160  j=          88
 DW: 1b            0 F
 Minimum ocean depth:    30.003215807563720       minimum number of ocean levels :            3

     zgr_zps : z-coordinate with partial steps
     ~~~~~~~ 
               mbathy is recomputed : bathy_level file is NOT used
 DW: 2  F F T F

     zgr_bat_ctl : check the bathymetry
     ~~~~~~~~~~~

                    suppress isolated ocean grid points
                    -----------------------------------
              147  ocean grid points suppressed
  mbathy set to 0 along east and west boundary: nperio =            0
  maximum number of ocean level =           24  < jpk-1
  you can decrease jpk to           25

     zgr_bot_level : ocean bottom k-index of T-, U-, V- and W-levels 
     ~~~~~~~~~~~~~

     zgr_top_level : ocean top k-index of T-, U-, V- and W-levels 
     ~~~~~~~~~~~~~

 dommsk : ocean mask 
 ~~~~~~
    Namelist namlbc
       lateral momentum boundary cond.    rn_shlat  =    1.6000000000000001     
       consistency with analytical form   ln_vorlat =  F
    ocean lateral  partial-slip 

 dom_vvl_init : Variable volume activated
 ~~~~~~~~~~~~

 ===>>> : W A R N I N G
         ===============

 W A R N I N G:  end of record or file while reading namelist nam_vvl in configuration namelist iostat =   -1

 dom_vvl_ctl : choice/control of the variable vertical coordinate
 ~~~~~~~~~~~
            Namelist nam_vvl : chose a vertical coordinate
               zstar                      ln_vvl_zstar   =  T
               ztilde                     ln_vvl_ztilde  =  F
               layer                      ln_vvl_layer   =  F
               ztilde as zstar   ln_vvl_ztilde_as_zstar  =  F
       ztilde near the equator    ln_vvl_zstar_at_eqtor  =  F
            Namelist nam_vvl : thickness diffusion coefficient
                                          rn_ahe3        =    0.0000000000000000     
            Namelist nam_vvl : maximum e3t deformation fractional change
                                          rn_zdef_max    =   0.90000000000000002     
            Namelist nam_vvl : z-tilde to zstar restoration timescale (days)
                                          rn_rst_e3t     =    30.000000000000000     
            Namelist nam_vvl : z-tilde cutoff frequency of low-pass filter (days)
                                          rn_lf_cutoff   =    5.0000000000000000     
            Namelist nam_vvl : debug prints
                                          ln_vvl_dbg     =  T

               zstar vertical coordinate is used

 rst_read : read oce NetCDF restart file
 ~~~~~~~~
                     iom_nf90_open ~~~ open existing file: ./restart_0000.nc in READ mode
                    ---> ./restart_0000.nc OK
           read sshn (rec:      1) in ./restart_0000.nc ok
           read fse3t_b (rec:      1) in ./restart_0000.nc ok
           read fse3t_n (rec:      1) in ./restart_0000.nc ok
 dom_vvl_rst : fse3t_b and fse3t_n found in restart files

 dom_stp : time stepping setting
 ~~~~~~~
                synchronous time stepping
                dynamics and tracer time step =    1.6000000000000001       hours
  
 istate_ini : Initialization of the dynamics and tracers
 ~~~~~~~~~~

 dta_tsd_init : Temperature & Salinity data 
 ~~~~~~~~~~~~ 
    Namelist namtsd
       Initialisation of ocean T & S with T &S input data   ln_tsd_init   =  F
       damping of ocean T & S toward T &S input data        ln_tsd_tradmp =  F


    T & S data not used
           read ub (rec:      1) in ./restart_0000.nc ok
           read vb (rec:      1) in ./restart_0000.nc ok
           read tb (rec:      1) in ./restart_0000.nc ok
           read sb (rec:      1) in ./restart_0000.nc ok
           read rotb (rec:      1) in ./restart_0000.nc ok
           read hdivb (rec:      1) in ./restart_0000.nc ok
           read sshb (rec:      1) in ./restart_0000.nc ok
           read un (rec:      1) in ./restart_0000.nc ok
           read vn (rec:      1) in ./restart_0000.nc ok
           read tn (rec:      1) in ./restart_0000.nc ok
           read sn (rec:      1) in ./restart_0000.nc ok
           read sshn (rec:      1) in ./restart_0000.nc ok
           read rotn (rec:      1) in ./restart_0000.nc ok
           read hdivn (rec:      1) in ./restart_0000.nc ok
           read rhop (rec:      1) in ./restart_0000.nc ok
  *** Info read in restart : 
    previous time-step                               :      1084050
  *** restart option
  nrstdt = 2 : calendar parameters read in restart

  *** Info used values : 
    date ndastp                                      :     19471231
    number of elapsed days since the begining of run :    72270.000000000000     

 =======>> 1/2 time step before the start of the run DATE Y/M/D =   1947/12/31  nsec_day:   83520  nsec_week:  515520
======>> time-step = 1084051      New day, DATE Y/M/D = 1948/01/01      nday_year = 001
         nsec_year =     2880   nsec_month =    2880   nsec_day =  2880
   nsec_week =   521280

 sbc_init : surface boundary condition setting
 ~~~~~~~~ 
         Namelist namsbc (partly overwritten with CPP key setting)
            frequency update of sbc (and ice)             nn_fsbc     =            5
            Type of sbc : 
               analytical formulation                     ln_ana      =  F
               flux       formulation                     ln_flx      =  F
               CLIO bulk  formulation                     ln_blk_clio =  F
               CORE bulk  formulation                     ln_blk_core =  T
               MFS  bulk  formulation                     ln_blk_mfs  =  F
               ocean-atmosphere coupled formulation       ln_cpl      =  F
               forced-coupled mixed formulation           ln_mixcpl   =  F
               OASIS coupling (with atm or sas)           lk_oasis    =  F
               components of your executable              nn_components =            0
               Multicategory heat flux formulation (LIM3) nn_limflx   =            0
            Misc. options of sbc : 
               Patm gradient added in ocean & ice Eqs.    ln_apr_dyn  =  F
               ice management in the sbc (=0/1/2/3)       nn_ice      =            3
               ice-ocean embedded/levitating (=0/1/2)     nn_ice_embd =            1
               daily mean to diurnal cycle qsr            ln_dm2dc    =  F
               runoff / runoff mouths                     ln_rnf      =  T
               iceshelf formulation                       nn_isf      =            0
               Sea Surface Restoring on SST and/or SSS    ln_ssr      =  T
               FreshWater Budget control  (=0/1/2)        nn_fwb      =            2
               closed sea (=0/1) (set in namdom)          nn_closea   =            0
               n. of iterations if land-sea-mask applied  nn_lsm      =            0
               Average per-category fluxes (nn_limflx = 0) 

               CORE bulk formulation

 sbc_ssm : sea surface mean fields
 ~~~~~~~ 
           read ssu_m (rec:      1) in ./restart_0000.nc ok
           read ssv_m (rec:      1) in ./restart_0000.nc ok
           read sst_m (rec:      1) in ./restart_0000.nc ok
           read sss_m (rec:      1) in ./restart_0000.nc ok
           read ssh_m (rec:      1) in ./restart_0000.nc ok
           read e3t_m (rec:      1) in ./restart_0000.nc ok
           read frq_m (rec:      1) in ./restart_0000.nc ok
 ~~~~~~~   mean fields read in the ocean restart file

 sbc_ssr : SST and/or SSS damping term 
 ~~~~~~~ 
    Namelist namsbc_ssr :
       SST restoring term (Yes=1)             nn_sstr     =            0
       SSS damping term (Yes=1, salt flux)    nn_sssr     =            2
                        (Yes=2, volume flux) 
       dQ/dT (restoring magnitude on SST)     rn_dqdt     =   -40.000000000000000       W/m2/K
       dE/dS (restoring magnitude on SST)     rn_deds     =   -166.66999999999999       mm/day
       flag to bound erp term                 ln_sssr_bnd =  T
       ABS(Max./Min.) erp threshold           rn_sssr_bnd =    4.0000000000000000       mm/day

 sbc_ssr : SSS restoring term toward SSS data
 ~~~~~~~
           namsbc_ssr Namelist
           list of files and frequency (>0: in hours ; <0 in months)
                root filename: ./ssr variable name: s_an
                frequency:   -1.0000000000000000       time interp:  T  climatology:  T  weights    :  pairing    :  data type: yearly   land/sea mask:

 sbc_rnf : runoff 
 ~~~~~~~ 
    Namelist namsbc_rnf
       specific river mouths treatment            ln_rnf_mouth =  T
       river mouth additional Kz                  rn_avt_rnf   =    1.0000000000000000E-003
       depth of river mouth additional mixing     rn_hrnf      =    15.000000000000000     
       multiplicative factor for runoff           rn_rfact     =    1.0000000000000000     

           runoffs inflow read in a file

 sbc_rnf_init : read runoffs data
 ~~~~~~~~~~~~
           namsbc_rnf Namelist
           list of files and frequency (>0: in hours ; <0 in months)
                root filename: ./runoff_core_monthly variable name: sorunoff
                frequency:   -1.0000000000000000       time interp:  T  climatology:  T  weights    :  pairing    :  data type: yearly   land/sea mask:

           Specific treatment used in vicinity of river mouths :
              - Increase Kz in surface layers (if rn_hrnf > 0 )
                by    1.0000000000000000E-003  m2/s  over            2  w-levels
              - set to zero SSS damping       (if ln_ssr=T)
              - mixed upstream-centered       (if ln_traadv_cen2=T)

 rnf_mouth : river mouth mask
 ~~~~~~~~~ 
                     iom_nf90_open ~~~ open existing file: ./runoff_core_monthly.nc in READ mode
                    ---> ./runoff_core_monthly.nc OK
           read socoefr0 (rec:      1) in ./runoff_core_monthly.nc ok
                     iom_close ~~~ close file: ./runoff_core_monthly.nc ok

 sbc_ice_lim : update ocean surface boudary condition
 ~~~~~~~~~~~   via Louvain la Neuve Ice Model (LIM-3) time stepping
      file   : namelist_ice_ref                                                                 open ok
      unit   =           20
      status = OLD
      form   = FORMATTED
      access = SEQUENTIAL

      file   : namelist_ice_cfg                                                                 open ok
      unit   =           21
      status = OLD
      form   = FORMATTED
      access = SEQUENTIAL

      file   : output.namelist.ice                                                              open ok
      unit   =           22
      status = UNKNOWN
      form   = FORMATTED
      access = SEQUENTIAL


 ===>>> : E R R O R
         ===========

 E R R O R :   misspelled variable in namelist namicerun in reference namelist iostat = 5010

 ice_run : ice share parameters for dynamics/advection/thermo of sea-ice
  ~~~~~~
    number of ice  categories                               =            0
    number of ice  layers                                   =            0
    number of snow layers                                   =            0
    switch for ice dynamics (1) or not (0)      ln_limdyn   =  T
    maximum ice concentration                               =    0.0000000000000000     
    Diagnose heat/salt budget or not          ln_limdiahsb  =  F
    Output   heat/salt budget or not          ln_limdiaout  =  F
    control prints in ocean.out for (i,j)=(iiceprt,jiceprt) =  F
    i-index for control prints (ln_icectl=true)             =            0
    j-index for control prints (ln_icectl=true)             =            0

 ===>>> : W A R N I N G
         ===============

 W A R N I N G:  end of record or file while reading namelist namiceitd in reference namelist iostat =   -1

 ===>>> : W A R N I N G
         ===============

 W A R N I N G:  end of record or file while reading namelist namiceitd in configuration namelist iostat =   -1

 ice_itd : ice cat distribution
  ~~~~~~
    shape of ice categories distribution                          nn_catbnd =            0
    mean ice thickness in the domain (only active if nn_catbnd=2) rn_himean =    0.0000000000000000     

 lim_itd_init : Initialization of ice cat distribution 
 ~~~~~~~~~~~~
  Thickness category boundaries 
  hi_max    99.000000000000000     

 lim_hdf : Ice horizontal diffusion
 ~~~~~~~

 ===>>> : W A R N I N G
         ===============

 W A R N I N G:  end of record or file while reading namelist namicehdf in reference namelist iostat =   -1

 ===>>> : W A R N I N G
         ===============

 W A R N I N G:  end of record or file while reading namelist namicehdf in configuration namelist iostat =   -1

    Namelist of ice parameters for ice horizontal diffusion computation 
       convergence check frequency of the Crant-Nicholson scheme   nn_convfrq   =            0

 lim_thd : Ice Thermodynamics
 ~~~~~~~

 ===>>> : E R R O R
         ===========

 E R R O R :   misspelled variable in namelist namicethd in reference namelist iostat = 5010

    Namelist of ice parameters for ice thermodynamic computation 
       ice thick. for lateral accretion                        rn_hnewice   =    0.0000000000000000     
       Frazil ice thickness as a function of wind or not       ln_frazil    =  F
       Maximum proportion of frazil ice collecting at bottom   rn_maxfrazb  =    0.0000000000000000     
       Thresold relative drift speed for collection of frazil  rn_vfrazb    =    0.0000000000000000     
       Squeezing coefficient for collection of frazil          rn_Cfrazb    =    0.0000000000000000     
       minimum ice thickness                                   rn_himin     =    0.0000000000000000     
       numerical carac. of the scheme for diffusion in ice 
       coefficient for ice-lead partition of snowfall          rn_betas     =    0.0000000000000000     
       extinction radiation parameter in sea ice               rn_kappa_i   =    0.0000000000000000     
       maximal n. of iter. for heat diffusion computation      nn_conv_dif  =    0.0000000000000000     
       maximal err. on T for heat diffusion computation        rn_terr_dif  =    0.0000000000000000     
       switch for comp. of thermal conductivity in the ice     nn_ice_thcon =            0
       check heat conservation in the ice/snow                 con_i        =  F
       virtual ITD mono-category parameterizations (1) or not  nn_monocat   =            0
       iterate the surface non-solar flux (T) or not (F)       ln_it_qnsice =  F

 ===>>> : W A R N I N G
         ===============

 W A R N I N G:  end of record or file while reading namelist namicesal in reference namelist iostat =   -1

 ===>>> : W A R N I N G
         ===============

 W A R N I N G:  end of record or file while reading namelist namicesal in configuration namelist iostat =   -1

 lim_thd_sal_init : Ice parameters for salinity 
 ~~~~~~~~~~~~~~~~
    switch for salinity nn_icesal        =            0
    bulk salinity value if nn_icesal = 1 =    0.0000000000000000     
    restoring salinity for GD            =    0.0000000000000000     
    restoring time for GD                =    0.0000000000000000     
    restoring salinity for flushing      =    0.0000000000000000     
    restoring time for flushing          =    0.0000000000000000     
    Maximum tolerated ice salinity       =    0.0000000000000000     
    Minimum tolerated ice salinity       =    0.0000000000000000     

 lim_msh : LIM-3 sea-ice model, mesh initialization
 ~~~~~~~
           the model domain is entirely in the southern hemisphere: njeq =           21

 ===>>> : W A R N I N G
         ===============

 W A R N I N G:  end of record or file while reading namelist namiceitdme in reference namelist iostat =   -1

 ===>>> : W A R N I N G
         ===============

 W A R N I N G:  end of record or file while reading namelist namiceitdme in configuration namelist iostat =   -1

  lim_itd_me_init : ice parameters for mechanical ice redistribution 
  ~~~~~~~~~~~~~~~
    Fraction of shear energy contributing to ridging        rn_cs       =    0.0000000000000000     
    Fraction of snow volume conserved during ridging        rn_fsnowrdg =    0.0000000000000000     
    Fraction of snow volume conserved during ridging        rn_fsnowrft =    0.0000000000000000     
    Fraction of total ice coverage contributing to ridging  rn_gstar    =    0.0000000000000000     
    Equivalent to G* for an exponential part function       rn_astar    =    0.0000000000000000     
    Quantity playing a role in max ridged ice thickness     rn_hstar    =    0.0000000000000000     
    Rafting of ice sheets or not                            ln_rafting  =  F
    Parmeter thickness (threshold between ridge-raft)       rn_hraft    =    0.0000000000000000     
    Rafting hyperbolic tangent coefficient                  rn_craft    =    0.0000000000000000     
    Initial porosity of ridges                              rn_por_rdg  =    0.0000000000000000     
    Switch for part. function (0) linear (1) exponential    nn_partfun  =            0

 lim_rst_read : read ice NetCDF restart file
 ~~~~~~~~~~~~~
                     iom_nf90_open ~~~ open existing file: ./restart_ice_in_0000.nc in READ mode
                    ---> ./restart_ice_in_0000.nc OK
    read ice restart file at time step    :    1084050.0000000000     
    in any case we force it to nit000 - 1 :      1084050
           read u_ice (rec:      1) in ./restart_ice_in_0000.nc ok
           read v_ice (rec:      1) in ./restart_ice_in_0000.nc ok
           read stress1_i (rec:      1) in ./restart_ice_in_0000.nc ok
           read stress2_i (rec:      1) in ./restart_ice_in_0000.nc ok
           read stress12_i (rec:      1) in ./restart_ice_in_0000.nc ok
           read snwice_mass (rec:      1) in ./restart_ice_in_0000.nc ok
           read snwice_mass_b (rec:      1) in ./restart_ice_in_0000.nc ok
           read sxopw (rec:      1) in ./restart_ice_in_0000.nc ok
           read syopw (rec:      1) in ./restart_ice_in_0000.nc ok
           read sxxopw (rec:      1) in ./restart_ice_in_0000.nc ok
           read syyopw (rec:      1) in ./restart_ice_in_0000.nc ok
           read sxyopw (rec:      1) in ./restart_ice_in_0000.nc ok

 lim_sbc_init : LIM-3 sea-ice - surface boundary condition
 ~~~~~~~~~~~~~   

 dyn_nept_init : Simplified Neptune module
 ~~~~~~~~~~~~~
  -->   Reading namelist namdyn_nept parameters:
        ln_neptsimp          =  F


 zdf_init: vertical physics
 ~~~~~~~~
    Namelist namzdf : set vertical mixing mixing parameters
       vertical eddy viscosity             rn_avm0   =    1.2000000000000000E-004
       vertical eddy diffusivity           rn_avt0   =    1.2000000000000000E-005
       constant background or profile      nn_avb    =            0
       horizontal variation for avtb       nn_havtb  =            0
       time splitting / backward scheme    ln_zdfexp =  F
       number of time step                 nn_zdfexp =            3
       enhanced vertical diffusion         ln_zdfevd =  T
          applied on momentum (=1/0)       nn_evdm   =            0
       vertical coefficient for evd        rn_avevd  =    100.00000000000000     
       non-penetrative convection (npc)    ln_zdfnpc =  F
       npc call  frequency                 nn_npc    =            1
       npc print frequency                 nn_npcp   =          365

    vertical mixing option :
       TKE dependent eddy coefficients

    convection :
       use enhanced vertical dif. scheme
       use the 1.5 turbulent closure

 zdf_bfr_init : momentum bottom friction
 ~~~~~~~~~~~~~
    Namelist nam_bfr : set bottom friction parameters
       linear botton friction
       bottom friction coef.   rn_bfri1  =    4.0000000000000002E-004
       implicit bottom friction switch                ln_bfrimp  =  T

 zdf_tke_init : tke turbulent closure scheme - initialisation
 ~~~~~~~~~~~~
    Namelist namzdf_tke : set tke mixing parameters
       coef. to compute avt                        rn_ediff  =   0.17999999999999999     
       Kolmogoroff dissipation coef.               rn_ediss  =   0.69999999999999996     
       tke surface input coef.                     rn_ebb    =    4.7500000000000000     
       minimum value of tke                        rn_emin   =    9.9999999999999995E-007
       surface minimum value of tke                rn_emin0  =    1.0000000000000000E-004
       background shear (>0)                       rn_bshear =    9.9999999999999995E-021
       mixing length type                          nn_mxl    =            2
       prandl number flag                          nn_pdl    =            1
       surface mixing length = F(stress) or not    ln_mxl0   =  T
       surface  mixing length minimum value        rn_mxl0   =    4.0000000000000001E-002
       flag to take into acc.  Langmuir circ.      ln_lc     =  T
       coef to compute verticla velocity of LC     rn_lc     =   0.14999999999999999     
       test param. to add tke induced by wind      nn_etau   =            1
       flag for computation of exp. tke profile    nn_htau   =            1
       fraction of en which pene. the thermocline  rn_efr    =    5.5000000000000000E-002

       critical Richardson nb with your parameters  ri_cri =   0.33962264150943394     
    use a surface mixing length = F(stress) :   set rn_mxl0 = rmxl_min
           read en (rec:      1) in ./restart_0000.nc ok
           read avt (rec:      1) in ./restart_0000.nc ok
           read avm (rec:      1) in ./restart_0000.nc ok
           read avmu (rec:      1) in ./restart_0000.nc ok
           read avmv (rec:      1) in ./restart_0000.nc ok
           read dissl (rec:      1) in ./restart_0000.nc ok

 zdf_tmx_init : tidal mixing
 ~~~~~~~~~~~~
    Namelist namzdf_tmx : set tidal mixing parameters
       Vertical decay scale for turbulence   =    600.00000000000000     
       Brunt-Vaisala frequency threshold     =    1.0000000000000000E-008
       Tidal dissipation efficiency          =   0.33300000000000002     
       Mixing efficiency                     =   0.23999999999999999     
       ITF specific parameterisation         =  T
       ITF tidal dissipation efficiency      =    1.0000000000000000     
                     iom_nf90_open ~~~ open existing file: mask_itf.nc in READ mode
                    ---> mask_itf.nc OK
           read tmaskitf (rec:      1) in mask_itf.nc ok
                     iom_close ~~~ close file: mask_itf.nc ok
                     iom_nf90_open ~~~ open existing file: M2rowdrg.nc in READ mode
                    ---> M2rowdrg.nc OK
           read field (rec:      1) in M2rowdrg.nc ok
                     iom_close ~~~ close file: M2rowdrg.nc ok
                     iom_nf90_open ~~~ open existing file: K1rowdrg.nc in READ mode
                    ---> K1rowdrg.nc OK

 ===>>> : E R R O R
         ===========

           iom_get_123d, file: K1rowdrg.nc, var: field
 To keep iom lisibility, when reading a 0D array,
 we do not accept data with 2 spatial dimensions
 Use ncwa -a to suppress the unnecessary dimensions
